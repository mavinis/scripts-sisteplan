-- PROGRESSO DE VÍDEO

CREATE TABLE IF NOT EXISTS ppi_curso.tb_progresso_usuario_video (
    id_progresso_video        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario                BIGINT  NOT NULL,
    id_video_aula             BIGINT  NOT NULL,
    nr_segundos_onde_parou    INTEGER NOT NULL DEFAULT 0,
    ind_concluido             BOOLEAN NOT NULL DEFAULT FALSE,
    dt_conclusao              TIMESTAMPTZ NULL,

    -- Constraint: apenas um progresso por usuário-vídeo
    CONSTRAINT uq_puv_usuario_video UNIQUE (id_usuario, id_video_aula),

    CONSTRAINT fk_puv_usuario      FOREIGN KEY (id_usuario)
        REFERENCES ppi_seg.tb_usuario(id_usuario),

    CONSTRAINT fk_puv_video        FOREIGN KEY (id_video_aula)
        REFERENCES ppi_curso.tb_video_aula(id_video_aula),

    CONSTRAINT chk_segundos_nao_negativo CHECK (nr_segundos_onde_parou >= 0),

    CONSTRAINT chk_video_consistencia CHECK (
        (ind_concluido AND dt_conclusao IS NOT NULL)
        OR
        (NOT ind_concluido AND dt_conclusao IS NULL)
    )
);

CREATE INDEX IF NOT EXISTS idx_puv_video   ON ppi_curso.tb_progresso_usuario_video (id_video_aula);


-- PROGRESSO DE MATERIAL COMPLEMENTAR

CREATE TABLE IF NOT EXISTS ppi_curso.tb_progresso_usuario_material (
    id_progresso_material      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario                 BIGINT  NOT NULL,
    id_material_aula           BIGINT  NOT NULL,
    ind_concluido              BOOLEAN NOT NULL DEFAULT FALSE,
    dt_conclusao               TIMESTAMPTZ NULL,

    -- Constraint: apenas um progresso por usuário-material
    CONSTRAINT uq_pum_usuario_material UNIQUE (id_usuario, id_material_aula),

    CONSTRAINT fk_pum_usuario       FOREIGN KEY (id_usuario)
        REFERENCES ppi_seg.tb_usuario(id_usuario),

    CONSTRAINT fk_pum_material      FOREIGN KEY (id_material_aula)
        REFERENCES ppi_curso.tb_material_aula(id_material_aula),

    CONSTRAINT chk_material_consistencia CHECK (
        (ind_concluido AND dt_conclusao IS NOT NULL)
        OR
        (NOT ind_concluido AND dt_conclusao IS NULL)
    )
);

CREATE INDEX IF NOT EXISTS idx_pum_material ON ppi_curso.tb_progresso_usuario_material (id_material_aula);


-- PROGRESSO DE QUESTIONÁRIO

CREATE TABLE IF NOT EXISTS ppi_curso.tb_progresso_usuario_questionario (
    id_progresso_questionario      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario                     BIGINT  NOT NULL,
    id_questionario_aula           BIGINT  NOT NULL,
    ind_concluido                  BOOLEAN NOT NULL DEFAULT FALSE,
    dt_conclusao                   TIMESTAMPTZ NULL,

    
    CONSTRAINT uq_puq_usuario_questionario UNIQUE (id_usuario, id_questionario_aula),
    
    CONSTRAINT fk_puq_usuario         FOREIGN KEY (id_usuario)
        REFERENCES ppi_seg.tb_usuario(id_usuario),
    
    CONSTRAINT fk_puq_questionario       FOREIGN KEY (id_questionario_aula)
        REFERENCES ppi_curso.tb_questionario_aula(id_questionario_aula),
    
    CONSTRAINT chk_quiz_consistencia     CHECK (
        (ind_concluido AND dt_conclusao IS NOT NULL)
        OR
        (NOT ind_concluido AND dt_conclusao IS NULL)
    )
);

CREATE INDEX IF NOT EXISTS idx_puq_questionario  ON ppi_curso.tb_progresso_usuario_questionario (id_questionario_aula);

